import { assert } from "chai";
import { Predictor } from "../src/Predictor";
import ModelMock from "./ModelMock";


suite("Predictor", () => {
    const predictor = new Predictor(new ModelMock())
    test("Predicts using correct descriptors", done => {
        const descriptors = new Float32Array([
            -0.11100232601165771,
            0.14226359128952026,
            0.09768524020910263,
            -0.06485741585493088,
            -0.10416407883167267,
            -0.029709026217460632,
            -0.011904269456863403,
            -0.020039629191160202,
            0.19224217534065247,
            -0.032940398901700974,
            0.23338912427425385,
            0.02244529128074646,
            -0.20282933115959167,
            -0.11494865268468857,
            0.08371029794216156,
            0.10229676216840744,
            -0.22067855298519135,
            -0.13115611672401428,
            -0.06003015860915184,
            -0.07461563497781754,
            0.06510426104068756,
            0.0013407990336418152,
            0.06026432663202286,
            0.033634476363658905,
            -0.17446857690811157,

            -0.33241716027259827,
            -0.07781323790550232,
            -0.19526898860931396,
            0.16542504727840424,
            -0.16155816614627838,
            -0.0020873714238405228,
            -0.08754057437181473,
            -0.19913190603256226,
            -0.08297611773014069,
            -0.0475710928440094,
            0.046372611075639725,
            -0.0021888352930545807,
            -0.1536703258752823,
            0.19379207491874695,
            -0.05319678783416748,
            -0.16733741760253906,
            -0.06332976371049881,
            -0.043355055153369904,
            0.18766334652900696,
            0.11438626050949097,
            -0.01600293628871441,
            0.09994719177484512,
            -0.001507595181465149,
            0.027400441467761993,
            -0.1619648039340973,
            0.11497297137975693,
            0.1585947871208191,
            0.09227138757705688,
            0.06894302368164062,
            0.05018668621778488,
            -0.19099979102611542,
            0.04789498820900917,
            0.19688042998313904,
            -0.18158935010433197,
            0.06243367865681648,
            0.10337866097688675,
            -0.01143376063555479,
            -0.01454670075327158,
            0.02239338308572769,
            0.26119086146354675,
            0.08654321730136871,
            -0.10475333780050278,
            -0.14378800988197327,
            0.1138538345694542,
            -0.08052580058574677,
            -0.04412766173481941,
            0.04640192911028862,
            -0.15555578470230103,
            -0.11132264882326126,
            -0.265097051858902,
            0.055870503187179565,
            0.36075952649116516,
            0.11512164026498795,
            -0.2654779553413391,
            -0.034222863614559174,
            -0.20636650919914246,
            0.04009164124727249,
            0.05437805876135826,
            0.05642388015985489,
            -0.07412489503622055,
            -0.00302094966173172,
            -0.17790110409259796,
            -0.008124209940433502,
            0.11048189550638199,
            0.025240644812583923,
            -0.01945725455880165,
            0.15214556455612183,
            0.03796308487653732,
            -0.02963910810649395,
            0.02005777135491371,
            0.004675455391407013,
            -0.1365390419960022,
            -0.04160485416650772,
            -0.011837296187877655,
            -0.037292007356882095,
            0.06538892537355423,
            -0.07580836117267609,
            -0.0958564430475235,
            0.17362135648727417,
            -0.2037729173898697,
            0.1508750021457672,
            0.030522938817739487,
            -0.04693476855754852,
            -0.023296330124139786,
            0.024465013295412064,
            -0.045056749135255814,
            -0.07992405444383621,
            0.15851424634456635,
            -0.22488150000572205,
            0.19973331689834595,
            0.24084332585334778,
            -0.006117161363363266,
            0.1840822845697403,
            0.04039965569972992,
            0.11478106677532196,
            -0.05874808877706528,
            -0.007285460829734802,
            -0.16889020800590515,
            -0.04457119107246399,
            0.004189241677522659,
            -0.04604308307170868,
            0.051919303834438324,
            0.03671645000576973
          ])
        const match = predictor.predict(descriptors);
        assert.isNotNull(match);
        assert.isString(match.label);
        assert.equal(match.label, "Dwayne Johnson")
        done();
    })
})